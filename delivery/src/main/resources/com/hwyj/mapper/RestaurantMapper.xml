<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
  
<mapper namespace="com.hwyj.mapper.RestaurantMapper">

	<resultMap type="com.hwyj.domain.ResVO" id="memberMap">
	<result property="RES_CODE" column="RES_CODE" />
	<result property="RES_NAME"  column="RES_NAME"/>
	<result property="RES_INFO" column="RES_INFO" />
	<result property="DEL_PRICE" column="DEL_PRICE" />
	<result property="RES_MENU_PRICE" column="RES_MENU_PRICE" />
	</resultMap>
	
	<resultMap type="com.hwyj.domain.ResMenuVO" id="menuMap">
	<result property="RES_CODE" column="RES_NAME" />
	<result property="m_name"  column="RES_ADDRESS"/>
	<result property="red_menu_code" column="RES_TEL" />
	<result property="res_menu_name" column="res_menu_name" />
	<result property="RES_MENU_EXPLAN" column="RES_MENU_EXPLAN" />
	<result property="res_menu_price" column="res_menu_price" />
	</resultMap>
	
		
<!--  메뉴보기 (식당이름, 메뉴이름, 메뉴설명, 메뉴가격) -->
	<select id="menuList" resultType="map" parameterType="com.hwyj.domain.ResMenuVO">	
	<!-- select res_menu_name, res_menu_explan, res_menu_price from res_menu left outer join member on res_menu.res_code=member.res_code
	where res_menu.res_code=#{res_code} -->
	select res_menu_name,res_menu_price from testdb.res_menu where res_menu_code  is not null
 	<!-- select res_menu_name,res_menu_price from res_menu limit 1,10 -->
	<!-- 일단 한줄씩 -->
	</select>
	
	<!-- 매장등록시 메뉴테이블에 매장코드 추가 -->
	<update id ="rescodeUpDate" >
		update testdb.res as a ,(select #{RES_CODE} from
		testdb.res_menu where #{RES_CODE} is not null)
		as b set a.RES_CODE = b.#{RES_CODE} where a.RES_CODE=b.#{RES_CODE} 
		
	</update>
	
	<!-- 매장 리스트 -->
		<select id="restList" resultType="map">
		 select res_name,res_info,RES_CODE,del_price 
		from testdb.res where RES_CODE  is not null 
		<!-- select testdb.res.RES_CODE, 
		res_name,
		res_info, del_price
		from testdb.res 
		left outer join testdb.res_menu on testdb.res.RES_CODE=testdb.res_menu.res_code
		where testdb.res.RES_CODE is not null -->
		</select>
	
	<select id="read" resultType="com.hwyj.domain.ResMenuVO">
		 select * from testdb.res_menu where RES_CODE=#{RES_CODE} 
	<!-- 	select testdb.res.RES_CODE from testdb.res left outer join testdb.res_menu on testdb.res.RES_CODE = testdb.res_menu.res_code
        where testdb.res.RES_CODE=#{RES_CODE} -->
	</select>
	
	
	
	
	<select id="menuread" resultType="com.hwyj.domain.ResMenuVO"> 
		select * from testdb.res_menu where res_menu_code=#{res_menu_code}
	</select>
	
		<select id="getList" resultType="com.hwyj.domain.ResMenuVO">	
	<!-- select res_menu_name, res_menu_explan, res_menu_price from res_menu left outer join member on res_menu.res_code=member.res_code
	where res_menu.res_code=#{res_code} -->
		select res_menu_name,res_menu_price from testdb.res_menu where res_menu_code=#{res_menu_code}
	</select>
	
		
	
	<!-- 이미지저장 테스트 -->
	<insert id="saveImage" parameterType="java.util.Map">
		INSERT INTO testdb.img_table VALUES #({img})
	</insert>

	<!-- 메장등록 -->
	<insert id="insertres" parameterType="com.hwyj.domain.ResVO">
		INSERT INTO testdb.res
		(RES_CODE,RES_NAME,RES_INFO,DEL_PRICE)
		VALUES 
		(#{RES_CODE},
		#{RES_NAME},
		#{RES_INFO},
		#{DEL_PRICE})
		
	</insert>
	
		<!-- 메뉴 등록 -->
	<insert id="insertmenu" parameterType="com.hwyj.domain.ResMenuVO">
		INSERT INTO testdb.res_menu
		(RES_CODE,
		res_menu_code,
		res_menu_name,
		res_menu_explan,
		res_menu_price)
		VALUES 
		(#{RES_CODE},
		#{res_menu_code},
		#{res_menu_name},
		#{res_menu_explan},
		#{res_menu_price}) 
		

	</insert>

</mapper>